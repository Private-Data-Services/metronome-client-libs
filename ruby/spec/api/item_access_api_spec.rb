=begin
#Metronome API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0
Contact: info@privatedataservices.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Metronome::ItemAccessApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ItemAccessApi' do
  before do
    # run before each test
    @api_instance = Metronome::ItemAccessApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ItemAccessApi' do
    it 'should create an instance of ItemAccessApi' do
      expect(@api_instance).to be_instance_of(Metronome::ItemAccessApi)
    end
  end

  # unit tests for expire_item
  # Expire an item and its sub-items immediately
  # @param item_id The ID of the item being expired
  # @param [Hash] opts the optional parameters
  # @return [ExpireItemResponse]
  describe 'expire_item test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for expire_sub_item
  # Expire a sub-item immediately
  # @param item_id The parent item ID of the sub-item being expired
  # @param sub_item_id The sub-item ID being expired
  # @param [Hash] opts the optional parameters
  # @return [ExpireSubItemResponse]
  describe 'expire_sub_item test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_item_log
  # Read a specific item&#39;s access log
  # @param item_id The ID of the item to be read
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :start_date Mutually exclusive with specifying the specific sub-items to read.
  # @option opts [Boolean] :end_date 
  # @return [ItemOrSubItemAccessLog]
  describe 'get_item_log test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_item_metadata
  # Read a specific item&#39;s metadata with or without any sub-items.
  # @param item_id The ID of the item to be read
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :all_sub_items Mutually exclusive with specifying the specific sub-items to read.
  # @option opts [Boolean] :no_item_content 
  # @option opts [Array<String>] :sub_item Mutually exclusive with all-sub-items&#x3D;true.  If you only wish to read a few specific sub-items with this item, include each sub-item name in multiple form parameters eg https://url/v1/metronome/items/customer-123?sub-item&#x3D;email&amp;sub-item&#x3D;mobile-phone&amp;sub-item&#x3D;address
  # @return [ItemMetadataResponse]
  describe 'get_item_metadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_item_policies
  # Read which policies have been applied to a specific item
  # @param item_id The ID of the item to be read
  # @param [Hash] opts the optional parameters
  # @return [ItemOrSubItemPolicyResponse]
  describe 'get_item_policies test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_sub_item_log
  # Read a specific sub-item&#39;s access log
  # @param item_id The parent item ID of the sub-item being read
  # @param sub_item_id The sub-item ID to be read
  # @param [Hash] opts the optional parameters
  # @return [ItemOrSubItemAccessLog]
  describe 'get_sub_item_log test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_sub_item_metadata
  # Read a specific sub-item&#39;s metadata
  # @param item_id The parent item ID of the sub-item being read
  # @param sub_item_id The sub-item ID to be read
  # @param [Hash] opts the optional parameters
  # @return [SubItemMetadataResponse]
  describe 'get_sub_item_metadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_sub_item_policies
  # Read which policies have been applied to a specific sub-item
  # @param item_id The parent item ID of the sub-item being read
  # @param sub_item_id The sub-item ID to be read
  # @param [Hash] opts the optional parameters
  # @return [ItemOrSubItemPolicyResponse]
  describe 'get_sub_item_policies test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
